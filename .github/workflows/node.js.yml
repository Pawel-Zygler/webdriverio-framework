name: automationstore.com e2e tests

on:
  push:
    branches: ["main"]
    paths-ignore:
      - "**.md"
  pull_request:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      triggerSmokeTests:
        description: "Trigger Smoke Tests"
        required: false
        default: "false"

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install Allure Reporter
        run: npm install -g allure-commandline

      - name: Install dependencies and build
        run: |
          npm ci
          npm run build --if-present

      - name: Determine test command
        id: test_command
        run: |
          if [[ "${{ github.event.inputs.triggerSmokeTests }}" == "true" || "${{ github.event.head_commit.message }}" == *"smoke"* ]]; then
            echo "Running Smoke Tests"
            echo "::set-output name=TEST_CMD::npm run autostore:smoke"
          else
            echo "Running All Tests"
            echo "::set-output name=TEST_CMD::npm run autostore"
          fi

      - name: Run tests and generate report
        run: ${{ steps.test_command.outputs.TEST_CMD }}

      - name: Archive reports
        run: |
          tar -czf combined-allure-report.tar.gz allure-report allure-results

      - name: Encode file to Base64 and save to temporary file
        run: base64 allure-reports.tar.gz > temp_base64.txt

      - name: Upload report archive as artifact
        uses: actions/upload-artifact@v2
        with:
          name: allure-reports-archive
          path: allure-reports.tar.gz

      - name: Execute SQL Query on MySQL Service
        if: false
        run: |
          mysql --host=db4free.net --port=3306 --user=pawelz --password=widelecosiem -e "SELECT * FROM cities;" salvemundus

      - name: Insert file to database
        run: |
          encoded_file=$(cat temp_base64.txt)
          mysql --host=db4free.net --port=3306 --user=pawelz --password=widelecosiem -e "INSERT INTO allureReports (file_data, upload_date) VALUES ('$encoded_file', NOW());" salvemundus

      - name: Verify report in db
        run: |
          mysql --host=db4free.net --port=3306 --user=pawelz --password=widelecosiem -e "SELECT * FROM allureReports;" salvemundus

      - name: Delete report from db
        run: |
          mysql --host=db4free.net --port=3306 --user=pawelz --password=widelecosiem -e "DELETE FROM allureReports WHERE id = 1;" salvemundus

      - name: Verify deletion from db
        run: |
          mysql --host=db4free.net --port=3306 --user=pawelz --password=widelecosiem -e "SELECT * FROM allureReports;" salvemundus
